/*@author vsingh*/
package com.ClaimsIntake;

import java.security.SecureRandom;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.Random;
import java.util.UUID;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.Add_Child_support;
import com.ui.pages.ClaimSummary;
import com.ui.pages.ClaimsIntake;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.Reassign_WorkItem;
import com.ui.pages.RegularclaimIntake;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;

import net.bytebuddy.utility.RandomString;

public class TC_50064 extends TestBase
{

	LoginLogoutPage lp;
	ClaimsIntake ci;
	QuerySearch q;
	FutureDatePastDate f;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String classname, SimpleClassname, snapshotPath;
	TC_50064 ClassObject;
	CreateDirectory CD;
	Random r;
	String  SSN = "048684963";
	String query = "select b.SSN  from T_EMPLOYEE a,T_CLAIMANT b ,T_CLAIMANT_ADDRESS c, T_CLAIM d WHERE  b.CLAIMANT_ID = c.CLAIMANT_ID and a.SSN = b.SSN "
			+" and c.CLAIMANT_ID = d.CLAIMANT_ID and  b.CLAIMANT_ID IN "
			+"(Select CLAIMANT_ID from t_claim where entitlement_type ='REG' AND STATUS = 'INAC')and c.COUNTRY ='US' and "
			+ "a.EMPLOYEE_ID NOT IN (select EMPLOYEE_ID from T_WAGE where YEAR = '2019' and  QUARTER = '2' OR QUARTER = '3' OR QUARTER = '4' )";

	public TC_50064()
	{
		super();
	}
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException, InterruptedException
	{

		//Fetching SSN...
		f = new FutureDatePastDate();
		System.out.println(query);
		q = new QuerySearch();	
		//SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);

		ClassObject =new TC_50064();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		System.out.println("browser initiated ..........");
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username_report"), prop.getProperty("password_report"));
		System.out.println("login logout completed");


	}

	@Test(description = "CT 28239 CIN_Dependency Child SSN; Claimant files IC with child dependent but SSN is "
			+ "Invalid the child dependent approval status is set as Not Approved... Help")
	public void TC_50064_claim() throws InterruptedException, ClassNotFoundException, SQLException, ParseException
	{
		String firstname = Add_Child_support.rng();
		String lastname = Add_Child_support.rng();

		
		
		RegularclaimIntake.RC_dependent_SSN_NOT_V(driver, SimpleClassname, snapshotPath, SSN ,firstname,lastname,"1742559912");
		
		Reassign_WorkItem.resolve_dependentWI_NOTAPPROVE( driver,  snapshotPath,  SimpleClassname);

		String CLAIM_ID = "";
		for	(int i=0;i<1;i++)
		{
			if (CLAIM_ID.isEmpty())
			{
				q = new QuerySearch();
				try
				{
					CLAIM_ID = q.getnewClaimID("select CLAIM_ID from T_CLAIM where CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT where ssn = '"+SSN+"') "
							+ " and  DATE(CREATED_TS) = CURRENT_DATE and STATUS='ACTV'");
					System.out.println("CLAIM_ID : "+CLAIM_ID);
				}
				catch(Exception e)
				{
					System.out.println("Record not found...");
				}
			}

			else {
				System.out.println("Claim Established.........ID =" +CLAIM_ID);
			}
		}
		Assert.assertFalse(CLAIM_ID.isEmpty(), "Payment ID is null......");

		ClaimSummary c= new ClaimSummary() ;
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Claimant SSN");
	}
	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{

		//driver.close();
		//driver.quit();
	}
}