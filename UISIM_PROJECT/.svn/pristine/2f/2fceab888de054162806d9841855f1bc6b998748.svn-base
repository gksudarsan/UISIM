/* Author vsingh*/
package com.Payments;

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.ClickAction;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.sun.org.apache.xerces.internal.impl.xpath.XPath;
import com.ui.base.TestBase;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;
import com.ui.pages.Add_Child_support;
import com.ui.pages.ClaimSummary;

import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.ResolveWorkItem;
import com.ui.pages.SearchWorkItem;
import com.ui.pages.UpdateClaimBalance;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;

import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.Highlighter;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;



public class TC_56572 extends TestBase
{


	static LoginLogoutPage lp;
	static SearchWorkItem sw;
	static screenShot screen=new screenShot();
	static PageHeading ph;
	static String classname;
	static String SimpleClassname;
	static String snapshotPath;
	static TC_56572 ClassObject;

	static  CreateDirectory CD;
	static Wc_locators wcl;
	static Payments_Locators pml;
	static FileWeeklyCertification fwc;
	static String date1;
	static ClaimSummary cs;
	static UpdateIssueDates uid;
	static WeeklyCert  w;
	static ResolveWorkItem rwi;

	static UpdateClaimBalance ucb;
	static Highlighter hl;
	FutureDatePastDate f;
	QuerySearch q;
	String cwedate = "";
	String SSN = "123456937", ed;
	int CWE = -7;

	String query = "select a.ssn from t_claimant a, t_claim c where c.status = 'ACTV' "
			+ "and c.entitlement_type = 'REG' and a.claimant_id = c.claimant_id and "
			+ "a.claimant_id not in (select b.claimant_id from t_weekly_certification b where a.claimant_id = b.claimant_id "
			+ "and certification_date > '";
	public TC_56572()
	{
		super();
	}

	 

	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws InterruptedException, ClassNotFoundException, SQLException

	{
		f = new FutureDatePastDate();
		ed = f.Sunday((CWE-21));
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		System.out.println("Effective date : "+ed);
		query = query + ed + "') and c.effective_date = '" + ed + "'";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query); 
		q = new QuerySearch();	
		//SSN = q.queryresult(query); 
		System.out.println("SSN to be use : "+SSN); 
		ClassObject =new TC_56572();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);

		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));

		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username_report"), prop.getProperty("password_report"));
		System.out.println("login logout completed");



	}
	@Test(description ="TC_56572 ..............................." )
	public void TC_56572_WC( ) throws InterruptedException, ParseException
	{
		System.out.println("@test initiated");
		wcl=new Wc_locators();
		fwc=new FileWeeklyCertification();
		uid= new UpdateIssueDates();
		ucb= new UpdateClaimBalance();
		cs= new ClaimSummary();
		hl = new Highlighter();

		String courtamount= prop.getProperty("56572_courtamount");

		cwedate = f.Saturday(CWE);
		System.out.println("cwedate=" +cwedate);
		String cwedate1 = cwedate.substring(0, 2) + "/" + cwedate.substring(2, 4) + "/" + cwedate.substring(4, 8);
		System.out.println("CWE Date on claimsummry screen = "+cwedate1);
		
		//String cwedate1 = prop.getProperty("56572_cwedate");
		
		pml=new Payments_Locators();
		Thread.sleep(3000);



		System.out.println("Ready to resolvre future issue-if any");

		uid.updateFutureIssueStartDate(driver, snapshotPath, SimpleClassname,SSN,-7);

		System.out.println("future issue resolved -if any");
		wcl.clickHome();
		System.out.println("moving to claim summary screen");

		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Weekly Amount ");
		Thread.sleep(3000);

		String wba= pml.WBA().getText();

		System.out.println(wba);

		Double WBA1 = Double.parseDouble(wba.substring(3));
		Double court_value = Double.parseDouble(prop.getProperty("56572_courtamount"));
		

		System.out.println(WBA1);

		Double cal_payment= (0.15*145.00)+(WBA1-145);

		System.out.println(cal_payment);

		Double d2 = cal_payment ;
		Double d1 = court_value ;



		if (Double.compare(d2,d1) <  0) 

		{	System.out.println("court value =" +d1+ "is less greater than calculated payble_child_support_Amount=" +cal_payment++ );

		driver.close();
		driver.quit();
		}

		else
		{
			System.out.println("Data correct, proceeding with SSN."+SSN);

		}
		pml.claimsummry_home().click();

		Add_Child_support.Add_child_support_courtOrder(driver, snapshotPath, SimpleClassname, SSN,prop.getProperty("56572_courtamount"));
		Thread.sleep(2000);

		System.out.println("ready to file WC");

		Thread.sleep(5000);
		w = new WeeklyCert();
		w.fileWeeklyCertification_56572(driver, snapshotPath, SimpleClassname, SSN, -21);
		System.out.println("wc 1 filed successfully");
		pml.Home().click();
		w.fileWeeklyCertification_56572(driver, snapshotPath, SimpleClassname, SSN, -14);
		pml.Home().click();

		System.out.println("wc 2 filed successfully");
		
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob Pay010DetermineWeeklyCertType benefits_daily_515pm;"
				+ "./qclient.sh runJob Pay040ProcessedWeeklyCert benefits_daily_515pm;./qclient.sh runJob Pay050ProvidePayment benefits_daily_515pm");
		Thread.sleep(10000);
		
		
			
		String ID = "";
		q = new QuerySearch();
		do
		{
			System.out.println("Waiting for Pay010DetermineWeeklyCertType, Pay040ProcessedWeeklyCert, Pay050ProvidePayment to run...");
			Thread.sleep(1000*30);
			try
			{
				ID = q.getClaimantPaymentID("SELECT CLAIMANT_PAYMENT_ID FROM T_CLAIMANT_PAYMENT WHERE "
						+ "CREATED_BY = 'Pay050ProvidePayment' AND DATE(CREATED_TS) = CURRENT_DATE AND CLAIMANT_ID IN (SELECT "
						+ "CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CREATED_TS DESC");
				System.out.println("CLAIMANT_PAYMENT_ID : "+ID);
			}
			catch(Exception e)
			{
				System.out.println("Record not found...");
			}
		}
		while(ID.isEmpty());
		System.out.println("Pay010DetermineWeeklyCertType, Pay040ProcessedWeeklyCert, Pay050ProvidePayment Successful...");
		Thread.sleep(1000);
		System.out.println("	");
		wcl.clickHome();
		
		
		System.out.println("moving to claim summary screen");

		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Weekly Amount ");
		Thread.sleep(3000);
		
		
		pml.processed_weekly_certifications().click();
		Thread.sleep(3000);
		
		
		pml.cwe_date(cwedate1).click();Thread.sleep(3000);
		
		
		
		
		String chlidsupportdeduction = pml.chlidsupportdeduction().getText();
		
		String chlidsupportdeduction1 =(chlidsupportdeduction.substring(2,4)); 
		
		
		System.out.println("chlidsupportdeduction = " +chlidsupportdeduction);
		System.out.println("chlidsupportdeduction = " +chlidsupportdeduction1);
		
		
			
		Assert.assertEquals(courtamount, chlidsupportdeduction1);
		
		System.out.println(" Using assert - Testcase passed, chlid support deduction match with  courtamount="  +chlidsupportdeduction1);
		
		
		System.out.println("Execution has been Done ready to close browser");
		
		}

		









	
	@AfterTest
	public void close_browser()
	{
		driver.close();
		driver.quit();
		System.out.println("Testcase executed and browser closed");
	}

}
