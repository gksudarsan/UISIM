/** @author vsingh  */
package com.Overpayments;

import static org.testng.Assert.assertEquals;



import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.ui.base.TestBase;
import com.ui.locators.OverPayment_Locators;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.Overpayment;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.Highlighter;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

public class TC_59594 extends TestBase
{
	static OverPayment_Locators opl=new OverPayment_Locators();
	FutureDatePastDate f;
	QuerySearch q;
	LoginLogoutPage lp;
	UpdateIssueDates uid;
	WeeklyCert w;
	ClaimSummary c;
	 Highlighter h;
	Overpayment o;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String ed,classname, SimpleClassname, snapshotPath, SSN = "123457318" ; 
	TC_59594 ClassObject;
	CreateDirectory CD;
	
	int CWE = 0;
	int numberOfWeeks = 1;
	String employer = "HAMDEN SHELL";
	
	String query = "SELECT UNIQUE(A.SSN) FROM T_CLAIMANT A, T_WEEKLY_CERTIFICATION B, T_CLAIMANT_PAYMENT C , T_CLAIM E, "
			+ "T_CLAIM_APPLICATION_EMPLOYER F WHERE A.CLAIMANT_ID = B.CLAIMANT_ID  AND B.CLAIMANT_ID = C.CLAIMANT_ID AND "
			+ "A.CLAIMANT_ID = E.CLAIMANT_ID AND E.CLAIM_APPLICATION_ID = F.CLAIM_APPLICATION_ID AND E.STATUS = 'ACTV' AND "
			+ "E.ENTITLEMENT_TYPE = 'REG' AND E.BYE_DATE > CURRENT_DATE AND F.EMPLOYER_NAME IS NOT NULL AND C.PAYMENT_DATE IS NOT "
			+ "NULL AND B.CERTIFICATION_DATE > '";

	public TC_59594()
	{
		super();
	}

	//Opening browser... Hitting URL...
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException, ParseException, InterruptedException
	{
		f = new FutureDatePastDate();
		ed = f.d(-29);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		query = query + ed + "' AND B.CERTIFICATION_DATE < '";
		ed = f.Saturday(-7);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		query = query + ed + "'";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);

		String lastCWE = q.Data("SELECT CWE FROM T_WEEKLY_CERTIFICATION WHERE CLAIMANT_ID IN (SELECT "
				+ "CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CWE DESC", "CWE");
		System.out.println("Last CWE : "+lastCWE);
		Date date = new Date();
		String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
		System.out.println("Current Date : "+currentDate);
		Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(lastCWE);
		Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(currentDate);
		CWE = (int)((date1.getTime() - date2.getTime()) / (1000*60*60*24));
		System.out.println(CWE);
	
		ClassObject =new TC_59594();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		System.out.println("login logout completed");
		
		
	}

	@Test( description ="CT 7232 OP Investigate Overpayment Issue - Add employer")
	public void TC_59594_op() throws InterruptedException, ClassNotFoundException, SQLException
	{
		
		c = new ClaimSummary();

		
		//Check Claim Summary process...
		wcl.clickHome();
		Thread.sleep(1000);
		
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Processed Weekly Certification(s)");

		//Creating Overpayment Issue...
		
		
		wcl.clickHome();
		Thread.sleep(5000);
		o = new Overpayment();
		
		o.createOverpaymentIssueWithSameEmply_59484(driver, snapshotPath, SimpleClassname, SSN, "National New Hire Crossmatch", CWE, numberOfWeeks);

		//Investigating Overpayment Iusse...
		wcl.clickHome();
		Thread.sleep(2000);
		
		Overpayment.NationalNewHireInvestOp_59594( driver,  snapshotPath,  SimpleClassname, SSN ,CWE, "National New Hire Crossmatch", "Non-Fraud", "120", "12", employer);
		
		wcl.clickHome();Thread.sleep(1000);
		wcl.homeTabs("Overpayments").click();
		Thread.sleep(1000);
		wcl.homeTabs("Investigate Overpayment Issue").click();
		wcl.ssn1().sendKeys(SSN);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		opl.SelectOvrPymntIssue("National New Hire Crossmatch").click();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		Thread.sleep(500);
		wcl.clickNext().click();
		Thread.sleep(5000);
		Highlighter h = new Highlighter();
		h.highlight(driver, "//td[contains(text(), 'Weekly Details : ')]//preceding::td[4]");
	
		
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		
		//driver.close();
		//driver.quit();
	}
}