package com.ui.utilities;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class QuerySearch
{
	List<String> ssn;
	Connection con;
	Statement stmt;
	ResultSet rs;
	Random r = new Random();
	int i=-1;
	String ed;
	FutureDatePastDate f;

	public String queryresult(String query) throws ClassNotFoundException, SQLException
	{
		String query1 = query;
		System.out.println(query1);
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query1);
		while(rs.next())
		{
			System.out.println(rs.getString("SSN"));
			ssn.add(rs.getString("SSN"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		System.out.println((i+1)+" records found...");
		int random = r.nextInt(i);
		System.out.println("Randomly picking record number "+(random+1));
		return ssn.get(random);
	}

	public String getData(String query) throws ClassNotFoundException, SQLException
	{
		r = new Random();
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query);
		while(rs.next())
		{
			System.out.println(rs.getString("ED"));
			ssn.add(rs.getString("ED"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		return ssn.get(r.nextInt(i));
	}

	public String getPetitionNumber(String query) throws ClassNotFoundException, SQLException
	{
		r = new Random();
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query);
		while(rs.next())
		{
			//System.out.println(rs.getString("Petition_Number"));
			ssn.add(rs.getString("Petition_Number"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		return ssn.get(r.nextInt(i));
	}

	public String getClaimWeekEndingDate(String query) throws ClassNotFoundException, SQLException
	{
		System.out.println(query);
		r = new Random();
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query);
		while(rs.next())
		{
			System.out.println(rs.getString("CWE"));
			ssn.add(rs.getString("CWE"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		return ssn.get(r.nextInt(i));
	}
	
	public String getTrainingStartDate(String query) throws ClassNotFoundException, SQLException
	{
		System.out.println(query);
		r = new Random();
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query);
		while(rs.next())
		{
			System.out.println(rs.getString("Training_Start_Date"));
			ssn.add(rs.getString("Training_Start_Date"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		return ssn.get(r.nextInt(i));
	}
	
	public String SHAREDWORK_PLAN_ID(String query) throws ClassNotFoundException, SQLException
	{
		String query1 = query;
		System.out.println(query1);
		ssn = new ArrayList<String>();
		Class.forName("com.ibm.db2.jcc.DB2Driver");
		con=DriverManager.getConnection("jdbc:db2://10.80.26.78:50000/DBSTCT","db2prd1","db2prd1.ctst");
		stmt=con.createStatement();
		rs=stmt.executeQuery(query1);
		while(rs.next())
		{
			System.out.println(rs.getString("SHAREDWORK_PLAN_ID"));
			ssn.add(rs.getString("SHAREDWORK_PLAN_ID"));
			i++;
		}
		con.close();
		if(i==0)
			i++;
		System.out.println((i+1)+" records found...");
		int random = r.nextInt(i);
		System.out.println("Randomly picking record number "+(random+1));
		return ssn.get(random);
	}
}