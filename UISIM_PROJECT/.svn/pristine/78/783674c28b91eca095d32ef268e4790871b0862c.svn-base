/*@author vsingh*/
package com.ClaimsIntake;

import java.security.SecureRandom;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.Random;
import java.util.UUID;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.Add_Child_support;
import com.ui.pages.ClaimsIntake;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.RegularclaimIntake;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;

import net.bytebuddy.utility.RandomString;

public class TC_50066 extends TestBase
{
	
	LoginLogoutPage lp;
	ClaimsIntake ci;
	QuerySearch q;
	FutureDatePastDate f;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String classname, SimpleClassname, snapshotPath;
	TC_50066 ClassObject;
	CreateDirectory CD;
	Random r;
	String  SSN = "046781712";
	String query ="select SSN from T_CLAIMANT WHERE CLAIMANT_ID IN (Select CLAIMANT_ID from t_claim where entitlement_type"
			+ " = 'REG' AND STATUS = 'INAC' AND UPDATED_BY = 'MIGRATION') ";

	public TC_50066()
	{
		super();
	}
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException, InterruptedException
	{
		
		//Fetching SSN...
		f = new FutureDatePastDate();
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);
		
		ClassObject =new TC_50066();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		System.out.println("browser initiated ..........");
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		System.out.println("login logout completed");

		
	}

	@Test(description = "")
	public void TC_50066_claim() throws InterruptedException, ClassNotFoundException, SQLException, ParseException
	{
	String firstname = Add_Child_support.rng();
	String lastname = Add_Child_support.rng();
	 
		RegularclaimIntake.regularClaim_dependent(driver, SimpleClassname, snapshotPath, SSN ,firstname,lastname);
		
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob BatchEstablishClaim benefits_daily_1230pm");
		Thread.sleep(10000);

		String CLAIM_ID = "";
		for	(int i=0;i<10;i++)
		{
			if (CLAIM_ID.isEmpty())
			{
			q = new QuerySearch();
			System.out.println(""+i+" Waiting for BatchEstablishClaim to run...");
			Thread.sleep(1000*30);
			try
			{
				CLAIM_ID = q.getnewClaimID("select CLAIM_ID from T_CLAIM where CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT where ssn = '"+SSN+"') "
						+ " and  DATE(CREATED_TS) = CURRENT_DATE and STATUS='ACTV'");
				System.out.println("CLAIM_ID : "+CLAIM_ID);
			}
			catch(Exception e)
			{
				System.out.println("Record not found...");
			}
			}

			else {
				System.out.println("Claim batch  Successful...");
			}
		}
		System.out.println("exit from loop..................");
		Assert.assertFalse(CLAIM_ID.isEmpty(), "Payment ID is null......");

		
	
		
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		
		//driver.close();
		//driver.quit();
	}
}