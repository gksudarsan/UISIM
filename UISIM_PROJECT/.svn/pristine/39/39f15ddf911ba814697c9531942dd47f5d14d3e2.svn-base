/* @author vsingh  */

package com.Payments;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.ClickAction;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.sun.org.apache.xerces.internal.impl.xpath.XPath;
import com.ui.base.TestBase;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;
import com.ui.pages.Add_Child_support;
import com.ui.pages.ClaimSummary;
import com.ui.pages.CreateIssue;
import com.ui.pages.EnterTAATimesheet;
import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.ReportPage;
import com.ui.pages.ResolveWorkItem;
import com.ui.pages.Resolve_TRA_issue;
import com.ui.pages.SearchWorkItem;
import com.ui.pages.TotalPaidAmountCalculation;
import com.ui.pages.UpdateClaimBalance;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;
import com.ui.pages.weekly_cert_pension;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.Highlighter;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;

public class TC_59049 extends TestBase
{
	static LoginLogoutPage lp;
	static SearchWorkItem sw;
	static screenShot screen=new screenShot();
	static PageHeading ph;
	static String classname;
	static String SimpleClassname;
	static String snapshotPath;
	static TC_59049 ClassObject;
	static  CreateDirectory CD;
	static Wc_locators wcl;
	static Payments_Locators pml;
	static FileWeeklyCertification fwc;
	static String date1;
	static ClaimSummary cs;
	static UpdateIssueDates uid;
	static WeeklyCert  w;
	static ResolveWorkItem rwi;
	static UpdateClaimBalance ucb;
	static Highlighter hl;
	static CreateIssue cri;
	static EnterTAATimesheet trat;
	FutureDatePastDate f;
	QuerySearch q;
	String cwedate ="";
	String SSN = "123457247", ed;
	int CWE = -7;
	String query = "select a.ssn from t_claimant a, t_claim c where c.status = 'ACTV' "
			+ "and c.entitlement_type = 'TRA' and a.claimant_id = c.claimant_id and "
			+ "a.claimant_id not in (select b.claimant_id from t_weekly_certification b where a.claimant_id = b.claimant_id "
			+ "and certification_date > '";
	public TC_59049()
	{
		super();
	}




	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws InterruptedException, ClassNotFoundException, SQLException

	{
		f = new FutureDatePastDate();
		ed = f.Sunday((CWE));
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		System.out.println("Effective date : "+ed);
		query = query + ed + "') and c.effective_date = '" + ed + "'";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query); 
		q = new QuerySearch();	
		//SSN = q.queryresult(query); 
		System.out.println("SSN to be use : "+SSN); 

		ClassObject =new TC_59049();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);

		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));

		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		System.out.println("login logout completed");



	}
	@Test(description ="TC_59049 ..............................." )
	public void TC_59049_WC( ) throws InterruptedException, ParseException, ClassNotFoundException, SQLException, IOException
	{
		System.out.println("@test initiated");
		wcl=new Wc_locators();
		fwc=new FileWeeklyCertification();

		uid= new UpdateIssueDates();
		ucb= new UpdateClaimBalance();
		cs= new ClaimSummary();
		hl = new Highlighter();
		cri = new CreateIssue();
		trat = new EnterTAATimesheet();
		pml=new Payments_Locators();
		cwedate = f.Saturday(CWE);
		System.out.println("cwedate=" +cwedate);
		String cwedate1 = cwedate.substring(0, 2) + "/" + cwedate.substring(2, 4) + "/" + cwedate.substring(4, 8);
		System.out.println("CWE Date on claimsummry screen = "+cwedate1);
		String ReportName= "FA-DAILY-UI-PAYMENT-REGISTER";



		Thread.sleep(3000);


		System.out.println(prop.getProperty("59049_total_dismissial_amount"));
		System.out.println(prop.getProperty("59049_Partial_week_dismissal_amount"));
		System.out.println(prop.getProperty("59049_full_week_dismissal_amount"));
		System.out.println(prop.getProperty("DISMISSIALAMOUNT_59049"));


		System.out.println("Ready to resolvre future issue-if any");

		uid.updateFutureIssueStartDate(driver, snapshotPath, SimpleClassname,SSN,CWE);

		System.out.println("future issue resolved -if any");
		wcl.clickHome();
		System.out.println("moving to claim summary screen");


		cri.createIssue_TRA(driver,  snapshotPath, SimpleClassname,SSN,   prop.getProperty("lumpsum"),   prop.getProperty("claimentcontry"));
		wcl.HomeButton().click(); Thread.sleep(5000);

		Resolve_TRA_issue.resolveInvestigationtraPay( driver,  snapshotPath,  SimpleClassname,SSN ) ;



		Resolve_TRA_issue.resolveAdjudicationDismissalPay( driver,  snapshotPath,  SimpleClassname  ,SSN,prop.getProperty("59049_total_dismissial_amount"),prop.getProperty("59049_full_week_dismissal_amount"),prop.getProperty("59049_Partial_week_dismissal_amount"));
		wcl.clickHome();

		trat.enterTaaTimesheet( driver,  snapshotPath,  SimpleClassname, SSN , CWE);
		wcl.clickHome();

		weekly_cert_pension.fileWeeklyCertification55739(driver, snapshotPath, SimpleClassname, SSN);
		wcl.clickHome();
		System.out.println("Running payment batches....................");

		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob Pay010DetermineWeeklyCertType benefits_daily_515pm;"
				+ "./qclient.sh runJob Pay040ProcessedWeeklyCert benefits_daily_515pm;./qclient.sh runJob Pay050ProvidePayment benefits_daily_515pm");
		Thread.sleep(10000);

		String ID = "";
		for	(int i=0;i<10;i++)
		{

			q = new QuerySearch();
			System.out.println("i= "+i+" Waiting for Pay010DetermineWeeklyCertType, Pay040ProcessedWeeklyCert, Pay050ProvidePayment to run...");
			Thread.sleep(1000*30);
			try
			{
				ID = q.getClaimantPaymentID("SELECT CLAIMANT_PAYMENT_ID FROM T_CLAIMANT_PAYMENT WHERE "
						+ "CREATED_BY = 'Pay050ProvidePayment' AND DATE(CREATED_TS) = CURRENT_DATE AND CLAIMANT_ID IN (SELECT "
						+ "CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CREATED_TS DESC");
				System.out.println("CLAIMANT_PAYMENT_ID : "+ID);
			}
			catch(Exception e)
			{
				System.out.println("Record not found...");
			}

			if (ID.isEmpty())

				System.out.println("waiting for payment to be updated");

			else {
				System.out.println("Pay010DetermineWeeklyCertType, Pay040ProcessedWeeklyCert, Pay050ProvidePayment Successful...");
			}
		}
		System.out.println("Batches executed......exit from loop..................");
		Assert.assertFalse(ID.isEmpty(), "Payment ID is null......");



		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Weekly Amount ");
		pml.claimsummry_home().click();
		Thread.sleep(3000);
		Thread.sleep(10000);
		System.out.println("Waiting to run batch ");

		pml.processed_weekly_certifications().click();

		Thread.sleep(3000);
		pml.cwe_date(cwedate1).click();Thread.sleep(3000);


		TotalPaidAmountCalculation.DissmisalPaidAmount_TRA_59049(SSN, prop.getProperty("DISMISSIALAMOUNT_59049"));
		pml.logout().click();
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username_report"), prop.getProperty("password_report"));
		System.out.println("login logout completed");

		ReportPage.PdfReport( snapshotPath, SimpleClassname , ReportName);





















	}
	@AfterTest
	public void close_browser()
	{
		//driver.close();
		//driver.quit();
		System.out.println("Testcase executed and browser closed");
	}

}
