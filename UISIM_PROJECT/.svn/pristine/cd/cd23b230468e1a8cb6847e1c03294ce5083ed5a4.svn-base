package com.Overpayments;

/** @author nnegi 

Payment batches pending */

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.sun.media.sound.InvalidFormatException;
import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.Overpayment;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.CreateExcel;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;

public class TC_55820 extends TestBase
{
	FutureDatePastDate f;
	QuerySearch q;
	LoginLogoutPage lp;
	UpdateIssueDates uid;
	WeeklyCert w;
	ClaimSummary c;
	Overpayment o;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String classname, SimpleClassname, snapshotPath, SSN, ed;
	TC_55820 ClassObject;
	CreateDirectory CD;
	int CWE = 0;

	String query = "SELECT UNIQUE(A.SSN) FROM T_CLAIMANT A, T_WEEKLY_CERTIFICATION B, T_CLAIMANT_PAYMENT C , T_CLAIM E, "
			+ "T_CLAIM_APPLICATION_EMPLOYER F WHERE A.CLAIMANT_ID = B.CLAIMANT_ID  AND B.CLAIMANT_ID = C.CLAIMANT_ID AND "
			+ "A.CLAIMANT_ID = E.CLAIMANT_ID AND E.CLAIM_APPLICATION_ID = F.CLAIM_APPLICATION_ID AND E.STATUS = 'ACTV' AND "
			+ "E.ENTITLEMENT_TYPE = 'REG' AND E.BYE_DATE > CURRENT_DATE AND F.EMPLOYER_NAME IS NOT NULL AND C.PAYMENT_DATE IS NOT "
			+ "NULL AND B.CERTIFICATION_DATE > '";

	//Properties prop;
	public TC_55820()
	{
		super();
	}

	//Opening browser... Hitting URL...
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException, ParseException
	{
		//Searching for the SSN in the database...
		f = new FutureDatePastDate();
		ed = f.d(-29);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		query = query + ed + "' AND B.CERTIFICATION_DATE < '";
		ed = f.Saturday(-7);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		query = query + ed + "'";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);

		String lastCWE = q.Data("SELECT CWE FROM T_WEEKLY_CERTIFICATION WHERE CLAIMANT_ID IN (SELECT "
				+ "CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CWE DESC", "CWE");
		System.out.println("Last CWE : "+lastCWE);
		Date date = new Date();
		String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
		System.out.println("Current Date : "+currentDate);
		Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(lastCWE);
		Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(currentDate);
		CWE = (int)((date1.getTime() - date2.getTime()) / (1000*60*60*24));
		System.out.println(CWE);

		ClassObject =new TC_55820();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
	}

	@Test(priority=1, description = "Fraud Overpayment_One Employer associated with the issue_Verify Overpayment Predetermination Notice")
	public void Testing_TC_55820() throws InterruptedException, ClassNotFoundException, SQLException, InvalidFormatException
	{
		//Logging in to application...
		lp=new LoginLogoutPage();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

		//Creating Overpayment Issue...
		wcl.clickHome();
		Thread.sleep(5000);
		o = new Overpayment();
		o.createOverpaymentIssue(driver, snapshotPath, SimpleClassname, SSN, "Quality Control", CWE, 1, 1);

		//Investigating Overpayment Iusse...
		wcl.clickHome();
		Thread.sleep(5000);
		o = new Overpayment();
		o.InvestigationOverpaymentIssueQualityControl(driver, snapshotPath, SimpleClassname, SSN, CWE, "Quality Control", "Fraud");
		
		System.out.println("Waiting for Predetermination Notice batch to run...");
		 
		
		//Run Predetermination Notice Batch...
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), BatchProp.getProperty("OverpaymentPreDeterminationBatch"));
		
		

		//Check for Predetermination Notice in DB...
		Thread.sleep(10000);
		checkPredterminationNoticeDB(SSN);

		
	}

	private void checkPredterminationNoticeDB(String SSN) throws ClassNotFoundException, SQLException, InvalidFormatException
	{
		QuerySearch qs = new QuerySearch();

		String CorrespondenceID = qs.getCorrespondenceID("SELECT Correspondence_ID FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");

		String CorrespondenceCode = qs.getCorrespondenceCode("SELECT CORRESPONDENCE_CODE FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");

		String ClaimantID = qs.getClaimantID("SELECT CLAIMANT_ID FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");

		String CreatedTS = qs.getCreatedTS("SELECT CREATED_TS FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");

		String CreatedBy = qs.getCreatedBy("SELECT CREATED_BY FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");
		
		String UpdateTS = qs.getUpdatedTs("SELECT UPDATED_TS FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");
		String UpdateBy = qs.getUpdatedBy("SELECT UPDATED_BY FROM T_CORRESPONDENCE WHERE "
				+ "CORRESPONDENCE_CODE =  'OVPPREDEF' AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') "
				+ "ORDER BY CREATED_TS DESC");

		CreateExcel ce = new CreateExcel();
		ce.create_t_correspondence_OverpaymentPreDeter(CorrespondenceID, CorrespondenceCode, ClaimantID, CreatedTS, CreatedBy,UpdateTS,UpdateBy);
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickLogout();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.close();
		driver.quit();
	}
}