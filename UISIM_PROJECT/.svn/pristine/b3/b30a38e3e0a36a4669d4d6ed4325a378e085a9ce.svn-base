package com.ui.pages;

import java.sql.SQLException;
import java.util.List;
import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;

import com.ui.base.TestBase;
import com.ui.locators.OverpaymentMaintenance_Locators;
import com.ui.locators.Wc_locators;
import com.ui.utilities.CreateTextFile;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.RandomGenerator;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;

public class OverpaymentMaintenance extends TestBase
{
	static screenShot screen=new screenShot();
	static Wc_locators wcl;
	static OverpaymentMaintenance_Locators oml;
	static String heading = "";
	static QuerySearch q;
	static JavascriptExecutor js;
	int counter;
	CreateTextFile ctf;

	public void enterRepaymentDetails(WebDriver driver, String snapshotPath, String SimpleClassname, String repaymentMode, String number, String amount, String date, String SSN) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click();
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Enter Repayment Details").click();
		Thread.sleep(5000);

		//Submission of Process Repayment page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentMode_focus(repaymentMode); Thread.sleep(500);
		oml.checkOrMoneyOrderNumber(number); Thread.sleep(500);
		oml.paymentAmount(amount); Thread.sleep(500);
		oml.Date("checkDate", date); Thread.sleep(500);
		oml.receiptNumber(String.valueOf(ThreadLocalRandom.current().nextInt(100000, 1000000))); Thread.sleep(500);
		oml.enterSSN("claimantSsn", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.clickSearch(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentAmount(amount);
		wcl.clickNext().click();
		Thread.sleep(5000);

		//Submission of Process Repayment Verification page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Verification"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click();
		Thread.sleep(5000);

		//Submission of Process Repayment Confirmation page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Confirmation"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

		if(!SimpleClassname.equals("TC_59354"))
		{
			if(!SimpleClassname.equals("TC_56562"))
			{
				//Run Repayment Batch...
				SSHConnection ssh=new SSHConnection();
				ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob BatchApplyRepayment benefits_daily_515pm");
				Thread.sleep(3000);

				String diff = "";
				q = new QuerySearch();
				do
				{
					System.out.println("Waiting for repayment batch to run...");
					Thread.sleep(1000*60);
					try
					{
						diff = q.getDiff("SELECT (CURRENT_DATE - DATE(UPDATED_TS)) DIFF FROM T_OVERPAYMENT WHERE "
								+ "DATE(UPDATED_TS) = CURRENT_DATE AND CLAIM_ID IN (SELECT CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN "
								+ "(SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"')) ORDER BY ESTABLISHMENT_DATE DESC");
						System.out.println("Last updated date : "+diff);
					}
					catch(Exception e)
					{
						System.out.println("Record not found...");
					}
				}
				while(!diff.equalsIgnoreCase("0"));
				System.out.println("Repayment Successful...");
			}		
		}
	}

	public void modifyRepaymentSchedule(WebDriver driver, String snapshotPath, String SimpleClassname, String SSN) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click();
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Modify Repayment Schedule").click();
		Thread.sleep(5000);

		oml.enterSSN("claimantSsnBean", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		//Submission of Active Mandatory Repayment Schedules page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Active Mandatory Repayment Schedules"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.selectOverpaymentRecord(); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		//Submission of Modify Mandatory Monthly Repayment Schedule page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Modify Mandatory Monthly Repayment Schedule"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		String oldAmount = driver.findElement(By.xpath("//input[contains(@name, 'monthlyRepaymentAmount')]")).getAttribute("value"); Thread.sleep(500);
		String newAmount = String.valueOf(Double.parseDouble(oldAmount)*0.50);
		oml.newModifiedAmount(newAmount); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click(); Thread.sleep(5000);

		//Submission of Modify Mandatory Repayment Schedule Confirmation page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Modify Mandatory Repayment Schedule Confirmation"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

		//Run BatchGenerateRepaymentPlanSchedule Batch...
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob BatchGenerateRepaymentPlanSchedule benefits_daily_515pm");
		Thread.sleep(3000);

		String ID = "";
		q = new QuerySearch();
		do
		{
			System.out.println("Waiting for BatchGenerateRepaymentPlanSchedule batch to run...");
			Thread.sleep(1000*60);
			try
			{
				ID = q.getOverpaymentID("SELECT OVERPAYMENT_ID FROM T_CT_REPAYMENT_PLAN WHERE OVERPAYMENT_ID IN (SELECT "
						+ "OVERPAYMENT_ID FROM T_OVERPAYMENT WHERE CLAIM_ID IN (SELECT CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN "
						+ "(SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"'))) AND DATE(CREATED_TS) = CURRENT_DATE "
						+ "ORDER BY UPDATED_TS DESC");
				System.out.println("OVERPAYMENT_ID : "+ID);
			}
			catch(Exception e)
			{
				System.out.println("Record not found...");
			}
		}
		while(ID.isEmpty());
		System.out.println("Repayment Plan Schedule Successful...");

		if(SimpleClassname.equals("TC_58285"))
		{
			ID = "";
			q = new QuerySearch();
			do
			{
				System.out.println("Waiting for MOD_RSHC correspondence to generate...");
				Thread.sleep(1000*60);
				try
				{
					ID = q.Data("SELECT CORRESPONDENCE_ID FROM T_CORRESPONDENCE WHERE CORRESPONDENCE_CODE = 'MOD_RSHC' AND"
							+ " DATE(CREATED_TS) = CURRENT_DATE AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM "
							+ "T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CREATED_TS DESC", "CORRESPONDENCE_ID");
					System.out.println("CORRESPONDENCE_ID : "+ID);
				}
				catch(Exception e)
				{
					System.out.println("Record not found...");
				}
			}
			while(ID.isEmpty());
			System.out.println("MOD_RSHC Correspondence generated successully...");

			//Running BatchUpdateBarcodeOnCorrespondenceBulkBenefits batch...
			ssh=new SSHConnection();
			ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob BatchUpdateBarcodeOnCorrespondenceBulkBenefits corr_benefits");
			Thread.sleep(3000);

			ID = "";
			q = new QuerySearch();
			do
			{
				System.out.println("Waiting for BatchUpdateBarcodeOnCorrespondenceBulkBenefits batch to run...");
				Thread.sleep(1000*60);
				try
				{
					ID = q.Data("SELECT CORRESPONDENCE_ID FROM T_CORRESPONDENCE WHERE CORRESPONDENCE_CODE = 'MOD_RSHC' AND"
							+ " DATE(CREATED_TS) = CURRENT_DATE AND MAIL_DATE IS NOT NULL AND CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM "
							+ "T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CREATED_TS DESC", "CORRESPONDENCE_ID");
					System.out.println("CORRESPONDENCE_ID : "+ID);
				}
				catch(Exception e)
				{
					System.out.println("Record not found...");
				}
			}
			while(ID.isEmpty());
			System.out.println("BatchUpdateBarcodeOnCorrespondenceBulkBenefits Successful...");
		}
	}

	public void modifyOverpaymentAddWeek(WebDriver driver, String snapshotPath, String SimpleClassname, String SSN) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click(); Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Modify Overpayment").click(); Thread.sleep(5000);

		oml.enterSSN("ssnBean", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		oml.selectOverpaymentId(); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		//Submission of Modify Overpayment Details page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Modify Overpayment Details"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.selectRadioButton("modified?", "No"); Thread.sleep(500);
		oml.selectRadioButton("Overpayment Determination?", "Yes"); Thread.sleep(500);
		js = ((JavascriptExecutor)driver);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		List<WebElement> times = driver.findElements(By.xpath("//td[contains(text(), 'Claim Week Ending')]//following::input[contains(@id, 'overpaymentCwePkId')]"));
		counter = times.size();
		System.out.println("Number of weeks already present : "+counter);
		String[] arr = new String[counter];
		for(int i = 0 ; i < counter ; i++)
		{
			arr[i] = driver.findElement(By.xpath("//td[contains(text(), 'Claim Week Ending')]//following::input[contains(@id, 'cweString')]")).getAttribute("value");
			System.out.println(arr[i]);
		}
		oml.addWeeks(); Thread.sleep(5000);

		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.Date("cweStartDate", new FutureDatePastDate().Saturday(-3650)); Thread.sleep(500);
		oml.Date("cweEndDate", new FutureDatePastDate().Saturday(-7)); Thread.sleep(500);
		wcl.clickSearch().click(); Thread.sleep(5000);
		String numberOfRecords = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[text() = 'CWE']//preceding::span[contains(text(), 'No of Records:')]"))).getText(); Thread.sleep(500);
		numberOfRecords = numberOfRecords.substring(numberOfRecords.indexOf("-"), numberOfRecords.indexOf(","));
		numberOfRecords = numberOfRecords.substring(2, numberOfRecords.indexOf(" of"));
		int count = Integer.parseInt(numberOfRecords);
		System.out.println("Number of records : "+count);
		for(int z = 0 ; z < count ; z++)
		{
			String date = driver.findElement(By.xpath("//tr[@data-ri='"+z+"']/td[2]")).getText();
			System.out.println(date);
			for(int x = 0 ; x < counter ; x++)
			{
				if(arr[x].equals(date))
					x = counter;
				else
				{
					System.out.println("Selecting record : "+z);
					driver.findElement(By.xpath("//tr[@data-ri='"+z+"']//following::span[contains(@class, 'chkbox')][1]")).click(); Thread.sleep(500);
					driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
					z = count;
					break;
				}
			}
		}
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		wcl.clickNext().click(); Thread.sleep(5000);

		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click(); Thread.sleep(5000);

		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	}

	public void cancelRepayment(WebDriver driver, String snapshotPath, String SimpleClassname, String SSN, String repaymentStatus, String isBankCancelled, String bankCancellationDate) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click(); Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Cancel Repayment").click(); Thread.sleep(5000);

		oml.enterSSN("ssnBean", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);
		
		wcl.clickRadioButtonCheckBox("//td[contains(text(), 'Repayment Status ')]//following::td[contains(text(), '"+repaymentStatus+"')][1]//preceding::span[contains(@class, 'radiobutton')][1]"); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click(); Thread.sleep(5000);

		wcl.clickRadioButtonCheckBox("//label[contains(text(), 'Is Bank Cancelled')]//following::label[contains(text(), '"+isBankCancelled+"')]//preceding::span[1]"); Thread.sleep(500);
		if(isBankCancelled.equals("Yes"))
			oml.Date("bankCancellationDate", bankCancellationDate); Thread.sleep(500);
			wcl.freeTextBox(); Thread.sleep(500);
			driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
			wcl.submit().click(); Thread.sleep(5000);

			driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	}

	public void creditcard_option (WebDriver driver, String snapshotPath, String SimpleClassname) throws InterruptedException
	{

		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		wcl.homeTabs("Overpayment Maintenance").click(); Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Enter Repayment Details").click(); Thread.sleep(5000);
		Thread.sleep(5000);
		driver.findElement(By.xpath("//label[text()='-Select-']")).click();
		Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	}

	public  void enterRepaymentDetails_Creditcard (WebDriver driver, String snapshotPath, String SimpleClassname, String repaymentMode, String number, String amount, String date, String SSN) throws InterruptedException
	{
		 wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click();
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Enter Repayment Details").click();
		Thread.sleep(5000);

		//Submission of Process Repayment page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentMode_focus(repaymentMode); Thread.sleep(500);
		oml.checkOrMoneyOrderNumber(number); Thread.sleep(500);
		oml.paymentAmount(amount); Thread.sleep(500);
		oml.Date("checkDate", date); Thread.sleep(500);
		oml.receiptNumber(String.valueOf(ThreadLocalRandom.current().nextInt(100000, 1000000))); Thread.sleep(500);
		oml.enterSSN("claimantSsn", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.clickSearch(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentAmount(amount);
		wcl.clickNext().click();
		Thread.sleep(5000);

		//Submission of Process Repayment Verification page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Verification"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click();
		Thread.sleep(5000);


		//Submission of Process Repayment Confirmation page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Confirmation"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

		//Run Repayment Batch...
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob BatchApplyRepayment benefits_daily_515pm");
		Thread.sleep(3000);

		String diff = "";
		q = new QuerySearch();
		do
		{
			System.out.println("Waiting for repayment batch to run...");
			Thread.sleep(1000*60);
			try
			{
				diff = q.getDiff("SELECT (CURRENT_DATE - DATE(UPDATED_TS)) DIFF FROM T_OVERPAYMENT WHERE "
						+ "DATE(UPDATED_TS) = CURRENT_DATE AND CLAIM_ID IN (SELECT CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN "
						+ "(SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"')) ORDER BY ESTABLISHMENT_DATE DESC");
				System.out.println("Last updated date : "+diff);
			}
			catch(Exception e)
			{
				System.out.println("Record not found...");
			}
		}
		while(!diff.equalsIgnoreCase("0"));
		System.out.println("Repayment Successful...");
	}


	public void enterRepaymentDetails_check(WebDriver driver, String snapshotPath, String SimpleClassname, String repaymentMode, String number, String amount, String date, String SSN) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click();
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Enter Repayment Details").click();
		Thread.sleep(5000);

		//Submission of Process Repayment page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentMode_focus(repaymentMode); Thread.sleep(500);
		oml.checkOrMoneyOrderNumber(number); Thread.sleep(500);
		oml.paymentAmount(amount); Thread.sleep(500);
		oml.Date("checkDate", date); Thread.sleep(500);
		oml.receiptNumber(String.valueOf(ThreadLocalRandom.current().nextInt(100000, 1000000))); Thread.sleep(500);
		oml.enterSSN("claimantSsn", SSN); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.clickSearch(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentAmount(amount);
		wcl.clickNext().click();
		Thread.sleep(5000);

		//Submission of Process Repayment Verification page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Verification"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click();
		Thread.sleep(5000);

		//Submission of Process Repayment Confirmation page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Process Repayment Confirmation"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

	



	}

	public void SITRepayment(WebDriver driver, String snapshotPath, String SimpleClassname, String SSN, String localPath, String winscpDirectory) throws ClassNotFoundException, SQLException
	{
		q = new QuerySearch();
		String[] content = new String[18];
		
		content[0] = "2620";
		content[1] = "0" + new RandomGenerator().randomNumberGenerator(8) + "     ";
		content[2] = q.Data("SELECT LAST_NAME FROM T_CLAIMANT WHERE SSN = '"+SSN+"'", "LAST_NAME");
		int counter = 20 - content[2].length();
		for (int e = 1 ; e <= counter ; e++)
			content[2] = content[2] + " ";
		content[3] = q.Data("SELECT FIRST_NAME FROM T_CLAIMANT WHERE SSN = '"+SSN+"'", "FIRST_NAME");
		counter = 9 - content[3].length();
		for (int e = 1 ; e <= counter ; e++)
			content[3] = content[3] + " ";
		content[4] = SSN;
		content[5] = content[2];
		content[6] = content[3];
		content[7] = content[4];
		content[8] = "J";
		content[9] = "19";
		String penaltyBalance = q.getPenaltyBalance("SELECT TF_PENALTY_BALANCE FROM T_OVERPAYMENT WHERE STATUS = 'ACTV' AND CLAIM_ID IN (SELECT "
				+ "CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"')) ORDER "
				+ "BY CREATED_TS DESC");
		String overpaymentBalance = q.getOverpaymentBalance("SELECT OVERPAYMENT_BALANCE FROM T_OVERPAYMENT WHERE STATUS = 'ACTV' AND CLAIM_ID IN (SELECT "
				+ "CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"')) ORDER "
				+ "BY CREATED_TS DESC");
		String interestBalance = q.getInterestBalance("SELECT INTEREST_BALANCE FROM T_OVERPAYMENT WHERE STATUS = 'ACTV' AND CLAIM_ID IN (SELECT "
				+ "CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"')) ORDER "
				+ "BY CREATED_TS DESC");
		double d = Double.parseDouble(overpaymentBalance) + Double.parseDouble(interestBalance) + Double.parseDouble(penaltyBalance);
		content[10] = String.valueOf(Math.round(d * 100.0) / 100.0);
		if(content[10].substring(content[10].length() - 2).equals(".0"))
			content[10] = content[10] + "0";
		counter = 9 - content[10].length();
		for (int e = 1 ; e <= counter ; e++)
			content[10] = " " + content[10];
		content[11] = new FutureDatePastDate().d(-30);
		content[11] = content[11].substring(6) + content[11].substring(0, 2) + content[11].substring(2, 4);
		content[12] = new FutureDatePastDate().d(0);
		content[12] = content[12].substring(6) + content[12].substring(0, 2) + content[12].substring(2, 4);
		content[13] = " ";
		content[14] = "        ";
		content[15] = "          ";
		content[16] = new FutureDatePastDate().d(0);
		content[16] = content[16].substring(6) + content[16].substring(0, 2) + content[16].substring(2, 4);
		content[17] = " ";
		
		ctf = new CreateTextFile();
		ctf.createWriteFile(localPath, content);
	}
	public void Verify_PendingRepayments(WebDriver driver, String snapshotPath, String SimpleClassname, String repaymentMode, String number, String amount, String date, String SSN) throws InterruptedException
	{
		wcl = new Wc_locators();
		oml = new OverpaymentMaintenance_Locators();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeTabs("Overpayment Maintenance").click();
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.homeSubTabs("Verify Pending Repayments").click();
		Thread.sleep(5000);

		//Submission of Process Repayment page...
		heading = wcl.heading();
		if(heading.equalsIgnoreCase("Verify Pending Repayments"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		oml.repaymentDate().click();Thread.sleep(1000);
		oml.repaymentDate().sendKeys(date);
	    wcl.ssn1().sendKeys(SSN);Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickSearch().click(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		Thread.sleep(5000);
	}
}