package com.Payments;

/** @author mjape

    Payment Batches Pending */

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.CreateIssue;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.MonetaryRedetermination;
import com.ui.pages.ResolveWorkItem;
import com.ui.pages.UpdateIssueDates;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

public class TC_56690 extends TestBase
{
	FutureDatePastDate f;
	QuerySearch q;
	LoginLogoutPage lp;
	UpdateIssueDates uid;
	Wc_locators wcl = new Wc_locators();
	ClaimSummary c;
	MonetaryRedetermination mr;
	CreateIssue ci;
	ResolveWorkItem rwi;
	screenShot screen=new screenShot();
	String classname, SimpleClassname, snapshotPath, SSN = "021642277", heading;
	int CWE = -14;
	TC_56690 ClassObject;
	CreateDirectory CD;
	JavascriptExecutor js;

	String query = "select ssn from T_CLAIMANT where CLAIMANT_ID in (select CLAIMANT_ID from t_claim where "
			+ "monetary_determination_date > '2020-02-01'  and BYE_DATE > current_date and status = 'ACTV' and claim_id in "
			+ "(select claim_id from T_PROCESSED_WEEKLY_CERT where PROCESSED_WEEKLY_CERT_ID in (select PROCESSED_WEEKLY_CERT_ID "
			+ "from T_WEEKLY_CERT_PMNT_DEDUCTION where MISSISSIPPI_OFFSET <> '0')))";

	//Properties prop;
	public TC_56690()
	{
		super();
	}

	//Opening browser... Hitting URL...
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException
	{
		//Searching for the SSN in the database...
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);

		ClassObject =new TC_56690();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
	}

	@Test(priority=1, description = "Payment: Processing reason re-determination: If week was processed as an Offset "
			+ "and being processed again because of 're-determination' processing reason, Overpayment will be created")
	public void Testing56690() throws InterruptedException, ClassNotFoundException, SQLException, ParseException
	{
		//Logging in to application...
		lp=new LoginLogoutPage();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		//Check Offset Week CWE...
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Processed Weekly Certification(s)");
		JavascriptExecutor js = ((JavascriptExecutor)driver);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(), 'Processed Weekly Certifications')]"))).click();
		Thread.sleep(5000);
		String heading = driver.findElement(By.xpath("//div[@role='heading']")).getText();
		if(heading.equalsIgnoreCase("Processed Weekly Certifications"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		String claimWeekEndingDate = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//td[contains(text(), 'Offset Week')]//preceding::a[1]"))).getText(); Thread.sleep(500);
		claimWeekEndingDate = claimWeekEndingDate.substring(0, 2) + claimWeekEndingDate.substring(3, 5) + claimWeekEndingDate.substring(6);
		System.out.println("Claim week ending date : "+claimWeekEndingDate);
		
		//Monetary Redetermination process...
		wcl.clickHome();
		Thread.sleep(5000);
		mr = new MonetaryRedetermination();
		mr.monetaryRedetermine(driver, snapshotPath, SimpleClassname, SSN, "Name MisMatch Entry");

		//Check Claim Summary process...
		wcl.clickHome();
		Thread.sleep(5000);
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Comment");
		
		//Create Issue...
		wcl.clickHome();
		Thread.sleep(5000);
		ci = new CreateIssue();
		ci.createIssueAbleAndAvailable(driver, snapshotPath, SimpleClassname, SSN);

		//Issue Investigation...
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		rwi = new ResolveWorkItem();
		rwi.resolveInvestigationAbleAndAvailable(driver, snapshotPath, SimpleClassname, SSN);

		//Issue Adjudication...
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		rwi = new ResolveWorkItem();
		rwi.resolveAdjudicationAbleAndAvailable(driver, snapshotPath, SimpleClassname, SSN, "Deny", "Alien Status", "04112020");

		//Check Claim Summary...
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Comment");

		js = ((JavascriptExecutor)driver);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(), 'Overpayments')]"))).click();
		Thread.sleep(5000);
		heading = driver.findElement(By.xpath("//div[@role='heading']")).getText();
		if(heading.equalsIgnoreCase("Overpayment Inquiry - List of Overpayments"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 15 more seconds for page to load...");
			Thread.sleep(15000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//td[contains(text(), 'Pending')]//preceding::span[contains(@class, 'radiobutton')]"))).click(); Thread.sleep(500);
		wcl.clickNext().click();
		Thread.sleep(5000);

		heading = driver.findElement(By.xpath("//div[@role='heading']")).getText();
		if(heading.equalsIgnoreCase("Overpayment Inquiry - Overpayment Details"))
			Thread.sleep(1000);
		else
		{
			System.out.println("Waiting for 30 more seconds for page to load...");
			Thread.sleep(30000);
		}
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickLogout();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.close();
		driver.quit();
	}
}