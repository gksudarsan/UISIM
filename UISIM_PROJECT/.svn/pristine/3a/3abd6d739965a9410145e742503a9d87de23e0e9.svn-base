package com.ui.pages;

import java.security.SecureRandom;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import com.ui.base.TestBase;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;
import com.ui.pages.LoginLogoutPage;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.screenShot;


public class Add_Child_support extends TestBase {
	
	 static LoginLogoutPage lp;
	
	static screenShot screen=new screenShot();
	static String classname;
	static String SimpleClassname;
	static String snapshotPath;
	static Add_dependent_spouse ClassObject;
	static  CreateDirectory CD;
	static Wc_locators wcl;
	static Payments_Locators pml;
	static FutureDatePastDate fdpd;
	static Random r;

	public static void Add_child_support_courtOrder (WebDriver driver ,String snapshotPath, String SimpleClassname ,String SSN, String courtamount) throws InterruptedException
	{
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl = new Wc_locators();
		pml=new Payments_Locators();
		fdpd=new FutureDatePastDate();
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		
		pml.benefit_maintance().click();
		Thread.sleep(1000);
		pml.benefit_maintance().click();
		Thread.sleep(2000);
		pml.AddUpdate_Child_Support().click();Thread.sleep(2000);
		wcl.ssn1().sendKeys(SSN); Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		wcl.clickNext().click();Thread.sleep(10000);
		
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		pml.AddNew_CourtOrder().click(); Thread.sleep(5000);
		r = new Random();
		pml.orderID().sendKeys(String.valueOf(r.nextInt((9999-100) + 1) +10)); Thread.sleep(1000);
		pml.courtNo().sendKeys(String.valueOf(r.nextInt((9999-100) + 1) +10));Thread.sleep(1000);
		pml.orderEffectiveDate_month().click();
		pml.orderEffectiveDate_month().sendKeys(fdpd.Sunday(-21));Thread.sleep(1000);
		
		pml.amount().sendKeys(courtamount);Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		wcl.submit().click(); Thread.sleep(10000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		pml.Home().click();Thread.sleep(5000);	
	}
	
	
	//import net.bytebuddy.utility.RandomString;

	public static String rng() {
	  
	    // function to generate a random string of length n 
	    String getAlphaNumericString="";
	     
	    	 
	        // chose a Character random from this String 
	    	 
	    		 String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	    	 
	                                    + "0123456789"
	                                    + "abcdefghijklmnopqrstuvxyz"; 
	  
	        // create StringBuffer size of AlphaNumericString 
	    		 int n = 5;
	        StringBuilder sb = new StringBuilder(n); 
	  
	        for (int i = 0; i < n; i++) { 
	  
	            // generate a random number between 
	            // 0 to AlphaNumericString variable length 
	            int index 
	                = (int)(AlphaNumericString.length() 
	                        * Math.random()); 
	  
	            // add Character one by one in end of sb 
	            sb.append(AlphaNumericString 
	                          .charAt(index)); 
	           
	        } 
	        System.out.println(sb);
	        
	       return sb.toString(); 
	    
	    
	
	}

	
	
	
}