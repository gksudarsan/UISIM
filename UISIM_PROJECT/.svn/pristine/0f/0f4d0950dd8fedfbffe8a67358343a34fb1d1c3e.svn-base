/** @author vsingh  */

package com.Overpayments;
import static org.testng.Assert.assertEquals;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.ui.base.TestBase;
import com.ui.locators.OverPayment_Locators;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;

import com.ui.pages.Add_dependent;
import com.ui.pages.ClaimSummary;
import com.ui.pages.Crossmatch_Parameters;
import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.Overpayment;
import com.ui.pages.ResolveWorkItem;
import com.ui.pages.SearchWorkItem;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;
import com.ui.pages.weekly_cert_pension;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.Highlighter;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.SSHConnection;
import com.ui.utilities.screenShot;



public class TC_59449 extends TestBase
{
	static LoginLogoutPage lp;
	static SearchWorkItem sw;
	static screenShot screen=new screenShot();
	static PageHeading ph;
	static  CreateDirectory CD;
	static Wc_locators wcl;
	static Payments_Locators pml;
	static FileWeeklyCertification fwc;
	static Highlighter h;
	static String date1;
	static ClaimSummary cs;
	static UpdateIssueDates uid;
	static weekly_cert_pension  wc;
	static ResolveWorkItem rwi;
	static WeeklyCert w;
	static Overpayment op;
	static OverPayment_Locators opl;
	static String issuesource = "Quality Control";
	static String ClassofOverpayment = "Fraud";
	static String IssueType= "Quality Control";
	static Crossmatch_Parameters cmp;
	QuerySearch q;
	FutureDatePastDate f;
	Overpayment o;
	ClaimSummary c;
	int CWE = -21;
	int numberOfWeeks=1;
	String classname, SimpleClassname, snapshotPath, SSN="095623133", ed; 
	TC_59449 ClassObject;

	String query = "select SSN from T_CROSSMATCH_HIT ORDER BY UPDATED_TS DESC";


	public TC_59449()
	{
		super();
	}





	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws InterruptedException, ClassNotFoundException, SQLException

	{
		f = new FutureDatePastDate();

		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult_ssn(query);
		System.out.println("SSN to be use : "+SSN);


		ClassObject =new TC_59449();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);

		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));

		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		System.out.println("login logout completed");



	}
	@Test(description ="TC_59512_CT 7232 OP Investigate Overpayment "
			+ "Issue - Enter claimant's response and clear op issue" )
	public void TC_59512_op() throws InterruptedException, ParseException, ClassNotFoundException, SQLException
	{
		System.out.println("@test initiated");
		wcl=new Wc_locators();

		opl=new OverPayment_Locators();
		o= new  Overpayment();

		Crossmatch_Parameters.Maintain_Crossmatch_Parameters ( driver,  snapshotPath,  SimpleClassname);

		//Run batch intrastate corssmatch-----------------------
		SSHConnection ssh=new SSHConnection();
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob IntrastateCrossmatchBatch on_demand");
		Thread.sleep(30000);

		o.OverpaymentIssue_verify(driver, snapshotPath, SimpleClassname, SSN,  "Intrastate Crossmatch");

		//run corrrs batch......................... runJob 
		
		ssh.runSudoCommand(BatchProp.getProperty("Benefits_Batch_Path"), "runJob Batch1099UpdateBarcodeOnCorrespondence on_demand");
		Thread.sleep(30000);
		
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Processed Weekly Certification(s)");

		Thread.sleep(1000);
		driver.findElement(By.xpath("//a[text()='View Correspondence']")).click();
		Thread.sleep(5000);
		driver.findElement(By.xpath("//label[text()='Outgoing']//preceding::div[1]")).click();
		wcl.clickSearch().click();Thread.sleep(10000);

		String wageletter =driver.findElement(By.xpath("//a[text()='XMATCHWAGE']")).getText();

		Assert.assertEquals(wageletter, "XMATCHWAGE");

		System.out.println("wageletter name =" +wageletter);






	}
	@AfterTest
	public void close_browser()
	{
		driver.close();
		driver.quit();
		System.out.println("Testcase executed and browser closed");
	}

}
