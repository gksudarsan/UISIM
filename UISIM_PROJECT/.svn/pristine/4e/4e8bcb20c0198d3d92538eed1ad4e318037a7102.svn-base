/**
 * 
 */
package com.Payments;

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;


import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.SearchWorkItem;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

/**
 * @author nnegi
 *
 */
public class TC_58918 extends TestBase{
	static ClaimSummary cs;
	LoginLogoutPage lp;
	static FutureDatePastDate f;
	
	static String heading;
	static int counter = 0;
	static Wc_locators wcl;
	static QuerySearch q;
	static PageHeading ph;
	static screenShot screen=new screenShot();
	static String classname;
	static String SimpleClassname;
	static String snapshotPath,SSN, ed;;
	static TC_58918 ClassObject;
	static  CreateDirectory CD;
	String query = "select a.ssn from t_claimant a, t_claim c where c.status = 'ACTV' "
			+ "and c.entitlement_type = 'REG' and a.claimant_id = c.claimant_id and "
			+ "a.claimant_id not in (select b.claimant_id from t_weekly_certification b where a.claimant_id = b.claimant_id "
			+ "and certification_date > '";

	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws InterruptedException, ClassNotFoundException, SQLException
	
	{
		f = new FutureDatePastDate();
		ed = f.Sunday(-7);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		System.out.println("Effective date : "+ed);
		query = query + ed + "') and c.effective_date = '" + ed + "'";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);
		
		ClassObject =new TC_58918();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		//wait=new WebDriverWait(driver, Duration.ofSeconds(50));
		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		
		
	}
	
	@Test(description ="TC_58918 Copy of Payment: Processing Reasons Weekly Certification: Non Payable weeks for all entitlements (Excessive Earning Week)")
	public void TC_58918_WC() throws InterruptedException, ParseException
	{
		wcl=new Wc_locators();
		ph=new PageHeading();
		Thread.sleep(2000);
		wcl.clickWcLink().click();
		Thread.sleep(2000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.fileWeeklyCertification().click();
		Thread.sleep(2000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.ssn1().sendKeys(SSN);

		wcl.confirmssn1().sendKeys(SSN);

		
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		//wcl.clickNext().click(); //optional
		Thread.sleep(5000);
		wcl.clickNext().click();
		Thread.sleep(2000);
		wcl.CheckNoPerformWork().click();
		Thread.sleep(500);
		wcl.WorkSearchInput().sendKeys("Testing");
		Thread.sleep(2000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		
		
		//Verify the screen "Weekly Certification and Work Search Record Acknowledgement"
		ph.WorkSearchQues_ConfirmationAckno_screen();
		
		
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		Thread.sleep(1000);
		wcl.ssnnum().sendKeys(SSN.substring(5));
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		
		ph.buttonToFileWeeklyCertification();
		
		Thread.sleep(3000);
		wcl.fileWeeklyCertBtn().click();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);	
		
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.checkMainQuestion("physically able to work full time", "Yes").click(); Thread.sleep(500);
		wcl.checkMainQuestion("available for full time work", "Yes").click(); Thread.sleep(500);
		wcl.checkMainQuestion("start school, college or training", "No").click(); Thread.sleep(500);
		wcl.checkMainQuestion("any self-employment not previously reported", "No").click(); Thread.sleep(500);
		wcl.checkMainQuestion("perform any work", "No").click(); Thread.sleep(500);
		wcl.check5aNo().click();	Thread.sleep(500);
		wcl.checkMainQuestion("definite date to return to full time employment", "No").click(); Thread.sleep(500);
		wcl.checkMainQuestion("refuse any offer or work or rehire", "No").click(); Thread.sleep(500);
		wcl.checkMainQuestion("receive your first payment from a pension", "No").click(); Thread.sleep(500);
		wcl.checkMainQuestion("receive dismissal pay", "No").click(); Thread.sleep(500);
		Thread.sleep(2500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		Thread.sleep(1000);

		

		//Submission of Verify Weekly Certification Responses page...
		ph.WeeklyCertificationResponses_Screen();
		

		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		Thread.sleep(5000);

		//Submission of Weekly Certification and Work Search Record Acknowledgement page...
		ph.WKCAcknowledgementScreen();
		
		wcl.ssnnum().sendKeys(SSN.substring(5));	Thread.sleep(500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.submit().click();
		Thread.sleep(5000);

		//Final Confirmation page...
		PageHeading.ConfirmationPage(SimpleClassname);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
  /*batch Automation
  
  /*batch Automation Batch Name // ./qclient.sh runJob Pay010DetermineWeeklyCertType benefits_daily_515pm
  
  */
		cs=new ClaimSummary();
		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Processed Weekly Certification(s)");
		
		
	}
	@AfterTest
	public void tearDown()
	{
		driver.close();
	}
}
