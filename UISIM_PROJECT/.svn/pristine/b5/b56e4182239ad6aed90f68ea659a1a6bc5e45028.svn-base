package com.BenefitMaintenance;

/**@author mjape*/

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.UpdateClaimBalance;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

public class TC_474 extends TestBase
{
	QuerySearch q;
	LoginLogoutPage lp;
	UpdateClaimBalance ucb;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String classname, SimpleClassname, snapshotPath;
	TC_474 ClassObject;
	CreateDirectory CD;
	String SSN = "";
	String query = "SELECT A.SSN FROM T_CLAIMANT A, T_CLAIM B, T_CT_CLAIM C WHERE A.CLAIMANT_ID = B.CLAIMANT_ID AND "
			+ "B.CLAIM_ID = C.CLAIM_ID AND C.IS_ATHLETE = '1' AND C.NON_ATHLETE_WBA <> '0' AND C.NON_ATHLETE_MBA <> '0'";

	//Properties prop;
	public TC_474()
	{
		super();
	}
	
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException
	{
		//Fetching SSN...
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();
		SSN = q.randomData(query, "SSN");
		System.out.println("SSN to be used : "+SSN);

		ClassObject =new TC_474();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);

		//Opening browser... Hitting URL...
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
	}

	@Test(priority=1, description = "Update Claim balance - new Non sport balance is more than existing non sport balance")
	public void Testing474() throws InterruptedException, ClassNotFoundException, SQLException, ParseException
	{
		//Logging in to application...
		lp=new LoginLogoutPage();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		Thread.sleep(1000);
		driver = screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		//Update Non-Sports Balance...
		ucb = new UpdateClaimBalance();
		ucb.updateNonSportsBalance(driver, snapshotPath, SimpleClassname, SSN);
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickLogout();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.close();
		driver.quit();
	}

}