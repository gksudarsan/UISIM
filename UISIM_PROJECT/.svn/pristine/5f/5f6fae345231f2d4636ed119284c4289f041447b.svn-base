/* Author vsingh*/

package com.Payments;

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.ui.base.TestBase;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;


import com.ui.pages.ClaimSummary;

import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.ResolveWorkItem;
import com.ui.pages.SearchWorkItem;
import com.ui.pages.UpdateClaimBalance;
import com.ui.pages.UpdateIssueDates;
import com.ui.pages.WeeklyCert;
import com.ui.pages.weekly_cert_pension;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.Highlighter;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;



public class TC_56798 extends TestBase
{


	static LoginLogoutPage lp;
	static SearchWorkItem sw;
	static screenShot screen=new screenShot();
	static PageHeading ph;
	static String classname;
	static String SimpleClassname;
	static String snapshotPath;
	static TC_56798 ClassObject;

	static  CreateDirectory CD;
	static Wc_locators wcl;
	static Payments_Locators pml;
	static FileWeeklyCertification fwc;
	static String date1;
	static ClaimSummary cs;
	static UpdateIssueDates uid;
	static WeeklyCert  w;
	static ResolveWorkItem rwi;
	static UpdateClaimBalance ucb;
	static Highlighter hl;
	FutureDatePastDate f;
	QuerySearch q;

	String cwedate = "";
	String SSN = " ", ed;
	int CWE = -7;

	
	String query = "select a.ssn from t_claimant a, t_claim c where c.status = 'ACTV' "
			+ "and c.entitlement_type = 'REG' and a.claimant_id = c.claimant_id and "
			+ "a.claimant_id not in (select b.claimant_id from t_weekly_certification b where a.claimant_id = b.claimant_id "
			+ "and certification_date > '";
	public TC_56798()
	{
		super();
	}


	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws InterruptedException, ClassNotFoundException, SQLException
	{
	f = new FutureDatePastDate();
	ed = f.Sunday(CWE);
	ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
	System.out.println("Effective date : "+ed);
	query = query + ed + "') and c.effective_date = '" + ed + "'";
	System.out.println("Query being hit to fetch SSN from database :");
	System.out.println(query);
	q = new QuerySearch();	
	SSN = q.queryresult(query);
	System.out.println("SSN to be use : "+SSN);
		
		ClassObject =new TC_56798();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);

		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));

		driver.get(prop.getProperty("applicationUrl"));
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		System.out.println("login logout completed");



	}
	@Test(description ="TC_56798_MBA set to 0--> File wc--> processed wc status = exausted." )
	public void TC_56798_TC() throws InterruptedException, ParseException
	{
		System.out.println("@test initiated");
		wcl=new Wc_locators();
		fwc=new FileWeeklyCertification();
		uid= new UpdateIssueDates();
		ucb= new UpdateClaimBalance();
		cs= new ClaimSummary();
		String SSN1= SSN.substring(5);
		pml=new Payments_Locators();
		Thread.sleep(3000);

		System.out.println(" moving to update mba.");
		ucb.updateMBAToZero(driver,snapshotPath, SimpleClassname,SSN);
		System.out.println("mba updated to 0.");
		pml.Home().click();

		System.out.println("Ready to resolvre future issue-if any");



		uid.updateFutureIssueStartDate(driver, snapshotPath, SimpleClassname,SSN,CWE);

		System.out.println("future issue resolved -if any");

		System.out.println("ready to file WC");
	   weekly_cert_pension.SubmitWeeklyCertification_SSN(driver,snapshotPath,SimpleClassname,SSN,SSN1);
		weekly_cert_pension.WCF_DeatilsForNonPartialEmpolyment(driver, snapshotPath, SimpleClassname,SSN1);
		System.out.println("wc filed successfully");

		pml.Home().click();


		System.out.println("moving to claim summary screen");

		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Balance ");
		Thread.sleep(3000);

		hl = new Highlighter();
		hl.highlight(driver, "//td[contains(text(), 'Exhausted Benefits')]");
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		System.out.println("Execution has been Done ready to close browser");
	}
	@AfterTest
	public void close_browser()
	{
		driver.close();
		driver.quit();
		System.out.println("Testcase executed and browser closed");
	}

}
