package com.Repayments;

/**@author mjape*/

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.Date;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.sun.media.sound.InvalidFormatException;
import com.ui.base.TestBase;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.LoginLogoutPage;
import com.ui.pages.Overpayment;
import com.ui.pages.OverpaymentMaintenance;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

public class TC_58055 extends TestBase
{
	QuerySearch q;
	LoginLogoutPage lp;
	Overpayment o;
	OverpaymentMaintenance om;
	ClaimSummary c;
	Wc_locators wcl = new Wc_locators();
	screenShot screen = new screenShot();
	String classname, SimpleClassname, snapshotPath, SSN = "123457107";
	int CWE;
	TC_58055 ClassObject;
	CreateDirectory CD;
	String query = "SELECT SSN FROM T_CLAIMANT WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIM WHERE "
			+ "BYE_DATE > CURRENT_DATE AND STATUS = 'ACTV' AND CLAIM_ID IN (SELECT CLAIM_ID FROM T_OVERPAYMENT WHERE "
			+ "CLASS = 'FRAD' AND STATUS = 'ACTV' AND ENTITLEMENT_TYPE = 'REG' AND OVERPAYMENT_BALANCE <> '0' AND "
			+ "INTEREST_BALANCE <> '0' AND TF_PENALTY_BALANCE <> '0'))";

	//Properties prop;
	public TC_58055()
	{
		super();
	}

	//Opening browser... Hitting URL...
	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException, ParseException
	{
		//Searching for the SSN in the database...
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);
		System.out.println("SSN to be use : "+SSN);

		String lastCWE = q.Data("SELECT CWE FROM T_WEEKLY_CERTIFICATION WHERE CLAIMANT_ID IN (SELECT "
				+ "CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"') ORDER BY CWE DESC", "CWE");
		System.out.println("Last CWE : "+lastCWE);
		Date date = new Date();
		String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
		System.out.println("Current Date : "+currentDate);
		Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(lastCWE);
		Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(currentDate);
		CWE = (int)((date1.getTime() - date2.getTime()) / (1000*60*60*24));
		System.out.println(CWE);

		ClassObject =new TC_58055();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(prop.getProperty("applicationUrl"));
	}

	@Test(priority=1, description = "Verify that the System should apply repayment as per the Repayment Apply Hierarchy for "
			+ "Multiple Overpayments_1 FRD_2 NFRD")
	public void Testing58055() throws InterruptedException, ClassNotFoundException, SQLException, InvalidFormatException
	{
		//Logging in to application...
		lp=new LoginLogoutPage();
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);

		//Create 2 Non-Fraud Overpayments...
		for(int a = 1 ; a <= 2 ; a++)
		{
			String [] issueSource = new String[]{"Overpayment Issue -  Reemployed", "Overpayment Issue - Work While Rec", "Voluntary Disclosure", "Quality Control", "Back Pay Award"};
			String selection = issueSource[new Random().nextInt(5)];
			
			//Creating Overpayment Issue...
			wcl.clickHome();
			Thread.sleep(5000);
			o = new Overpayment();
			o.createOverpaymentIssue(driver, snapshotPath, SimpleClassname, SSN, selection, CWE, 1, 1);

			//Investigating Overpayment Iusse...
			wcl.clickHome();
			Thread.sleep(5000);
			o = new Overpayment();
			o.InvestigationOverpaymentIssueQualityControl(driver, snapshotPath, SimpleClassname, SSN, CWE, selection, "Non-Fraud");

			//Provide Claimant's Responce...
			wcl.clickHome();
			Thread.sleep(5000);
			o = new Overpayment();
			o.preDeterminationLetterResponse(driver, snapshotPath, SimpleClassname, SSN, selection, "Non-Fraud");
		}
		
		//Check Claim Summary process...
		wcl.clickHome();
		Thread.sleep(5000);
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Comment");
		
		driver.findElement(By.xpath("//a[contains(text(), 'Overpayments')]")).click(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		String amount = "";
		q = new QuerySearch();
		String countACTV = q.Data("SELECT COUNT(OVERPAYMENT_BALANCE) COUNTACTV FROM T_OVERPAYMENT WHERE STATUS = 'ACTV' AND CLAIM_ID IN "
				+ "(SELECT CLAIM_ID FROM T_CLAIM WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"'))",
				"COUNTACTV");
		int count = Integer.parseInt(countACTV);
		
		String overpaymentID[] = new String[count];
		do
		{
			count = count - 1;
			overpaymentID[count] = q.Data("SELECT OVERPAYMENT_ID FROM T_OVERPAYMENT WHERE STATUS = 'ACTV' AND CLAIM_ID IN (SELECT CLAIM_ID FROM "
					+ "T_CLAIM WHERE CLAIMANT_ID IN (SELECT CLAIMANT_ID FROM T_CLAIMANT WHERE SSN = '"+SSN+"'))", "OVERPAYMENT_ID");
		}
		while(count!=0);
		
		count = Integer.parseInt(countACTV);
		String penaltyBalance[] = new String[count];
		String overpaymentBalance[] = new String[count];
		String interestBalance[] = new String[count];
		double d = 0.00;
		
		do
		{
			count = count - 1;
			
			penaltyBalance[count] = q.getPenaltyBalance("SELECT TF_PENALTY_BALANCE FROM T_OVERPAYMENT WHERE "
					+ "OVERPAYMENT_ID = '"+overpaymentID[count]+"'");
			d = d + Double.parseDouble(penaltyBalance[count]);
			
			overpaymentBalance[count] = q.getOverpaymentBalance("SELECT OVERPAYMENT_BALANCE FROM T_OVERPAYMENT WHERE "
					+ "OVERPAYMENT_ID = '"+overpaymentID[count]+"'");
			d = d + Double.parseDouble(overpaymentBalance[count]);
			
			interestBalance[count] = q.getInterestBalance("SELECT INTEREST_BALANCE FROM T_OVERPAYMENT WHERE "
					+ "OVERPAYMENT_ID = '"+overpaymentID[count]+"'");
			d = d + Double.parseDouble(interestBalance[count]);
		}
		while(count!=0);
		
		amount = String.valueOf(d);
		System.out.println("Total overpayment amount : "+d);
		System.out.println("Total repayment amount : "+amount);

		//Enter Repayment Details process...
		om = new OverpaymentMaintenance();
		om.enterRepaymentDetails(driver, snapshotPath, SimpleClassname, "Cash", "", amount, "", SSN);

		//Check Claim Summary process...
		wcl.clickHome();
		Thread.sleep(5000);
		c = new ClaimSummary();
		c.claimsummary(SSN, snapshotPath, SimpleClassname, "Comment");

		driver.findElement(By.xpath("//a[contains(text(), 'Overpayments')]")).click(); Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.findElement(By.xpath("//a[contains(text(), 'Repayment Details')]//following::a[1]")).click(); Thread.sleep(5000);
		JavascriptExecutor js = ((JavascriptExecutor)driver);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(1000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	}

	//Logging out of application...
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		wcl.clickHome();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickLogout();
		Thread.sleep(5000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.close();
		driver.quit();
	}
}