package com.Payments;

import java.sql.SQLException;
import java.text.ParseException;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.WeeklyCertification.TC_FWC_WithNoPartialEmployment;
import com.ui.base.TestBase;
import com.ui.locators.Payments_Locators;
import com.ui.locators.Wc_locators;
import com.ui.pages.ClaimSummary;
import com.ui.pages.FileWeeklyCertification;
import com.ui.pages.LoginLogoutPage;
import com.ui.utilities.CreateDirectory;
import com.ui.utilities.FutureDatePastDate;
import com.ui.utilities.PageHeading;
import com.ui.utilities.QuerySearch;
import com.ui.utilities.screenShot;

public class TC_56642 extends TestBase {
	PageHeading ph;
	LoginLogoutPage lp;
	Wc_locators wc;
	static Payments_Locators pl ;
	static screenShot screen=new screenShot();
	static String classname;
	static String SimpleClassname;
	static String snapshotPath,SSN = "043724997", ed;
	static TC_56642 ClassObject;
	int a=0,  CWE = -14;
	FutureDatePastDate f = new FutureDatePastDate();
	QuerySearch q;
	static  CreateDirectory CD;
	String query = "SELECT SSN FROM T_CLAIMANT WHERE CLAIMANT_ID IN (SELECT A.CLAIMANT_ID FROM (SELECT A.CLAIM_ID,A.CLAIMANT_ID,A.WBA,A.MBA FROM "
			+ "(SELECT * FROM DB2PRD1.t_claim where BYE_DATE > current date and effective_date > '2020-05-01') A "
			+ "INNER JOIN DB2PRD1.T_CLAIMANT_PAYMENT B "
			+ "ON A.CLAIMANT_ID = B.CLAIMANT_ID) A "
			+ "INNER JOIN DB2PRD1.T_CLAIM_EMPLOYMENT C "
			+ "ON A.CLAIM_ID = C.CLAIM_ID and A.CLAIM_ID not in (Select A.CLAIM_ID from T_OVERPAYMENT X where A.CLAIM_ID=X.CLAIM_ID ) ) "
			+ "AND CLAIMANT_ID NOT IN (select CLAIMANT_ID from T_WEEKLY_CERTIFICATION where certification_date > '";

	@Parameters({"browser"})
	@BeforeTest
	public void setup(String browser) throws ClassNotFoundException, SQLException

	{
		ed = f.Sunday(CWE);
		ed = ed.substring(4, 8) + "-" + ed.substring(0, 2) + "-" + ed.substring(2, 4);
		System.out.println("Effective date : "+ed);
		query = query + ed + "')";
		System.out.println("Query being hit to fetch SSN from database :");
		System.out.println(query);
		q = new QuerySearch();	
		SSN = q.queryresult(query);		
		System.out.println("SSN to be use : "+SSN);
		
		ClassObject =new TC_56642();
		CD=new CreateDirectory();
		classname=ClassObject.getClass().getName();
		SimpleClassname =classname.substring(classname.lastIndexOf('.')+1);
		snapshotPath=CD.artifactsPath(SimpleClassname);
		System.out.println("Path of folder where screenshots are placed of Execution: " +snapshotPath);
		initialization(browser);
		wait=new WebDriverWait(driver,Duration.ofSeconds(50));
		//wait=new WebDriverWait(driver, Duration.ofSeconds(50));
		driver.get(prop.getProperty("applicationUrl"));
		
		
		
		
	}
	
	@Test(priority=2,description ="Cancel and reissue Paymentt")
	public void TestingTC_56642() throws InterruptedException, ParseException
	{
		lp=new LoginLogoutPage();
		lp.login(prop.getProperty("username"), prop.getProperty("password"));
		
		pl = new Payments_Locators();
		ph=new PageHeading();
		ClaimSummary cs=new ClaimSummary();
		cs.claimsummary(SSN, snapshotPath, SimpleClassname, "Processed Weekly Certification(s)");
		Thread.sleep(2000);
		String EndDate=null;
		
		for(int i=1;i<100;i++)
		   {
			   if(i>0)
			   {
			   
			   String st = driver.findElement(By.xpath("//td[contains(text(),'Processed Weekly Certification(s)')]//following::table[1]/tbody/tr["+i+"]/td[4]")).getText();
			   System.out.println("Element Text is " +st);
			   if (st.equalsIgnoreCase("Payment"))
			   {
				   
				   EndDate = driver.findElement(By.xpath("//td[contains(text(),'Processed Weekly Certification(s)')]//following::table[1]/tbody/tr["+i+"]/td[1]")).getText();
				   System.out.println("Found Paid Week End Date " +EndDate);
				   break;
			   }
			   else
			   {
				   System.out.println("Finding Paid Week...." );
				   
			   }
			   }   
		    }
		
		Thread.sleep(3000); 
		Wc_locators wcl=new Wc_locators();
		wcl.clickHome();
		Thread.sleep(3000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		pl.clickbyweekly().click();
		Thread.sleep(3000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		pl.clickcwes().click();
		Thread.sleep(3000);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		pl.clickpayment().click();
		
		
		
		driver.findElement(By.name("claimantSsn_-ssn1")).sendKeys(SSN);
		driver.findElement(By.name("startDate_-month")).click();
		driver.findElement(By.name("startDate_-month")).sendKeys(FutureDatePastDate.ConvertDate(EndDate));
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		driver.findElement(By.xpath("//td/button/span[text()='Search']")).click();
		Thread.sleep(5000);
		
		driver.findElement(By.xpath("//td/div/div/span")).click();
		Thread.sleep(1500);
		JavascriptExecutor js = ((JavascriptExecutor)driver);
		js.executeScript("window.scrollTo(0, document.body.scrollHeight)"); Thread.sleep(1500);
		driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		wcl.clickNext().click();
		
		Thread.sleep(3000);
		driver.findElement(By.xpath("//*[@id='reasonForCancel']/div[3]/span")).click();
	    driver.findElement(By.xpath("//li[text()='Cancel DC Payment']")).click();
	    Thread.sleep(3000);
	    driver.findElement(By.xpath("//*[text()='Yes']")).click();
	    driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
	    Thread.sleep(3000);
	    wcl.submit().click();
	    Thread.sleep(3000);
	    driver=screen.getScreenShot(driver, snapshotPath, SimpleClassname);
		
		
	}
	@AfterTest
	public void tearDownCT_ST() throws InterruptedException
	{
		
		driver.close();
		driver.quit();
	}

}


